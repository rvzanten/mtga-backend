// Code generated by protoc-gen-go.
// source: proto/OTSthingy.proto
// DO NOT EDIT!

/*
Package OTSthingy is a generated protocol buffer package.

It is generated from these files:
	proto/OTSthingy.proto

It has these top-level messages:
	TimeStampRequest
	IncompleteTimeStamp
*/
package OTSthingy

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TimeStampRequest struct {
	DocumentHash []byte `protobuf:"bytes,1,opt,name=document_hash,json=documentHash,proto3" json:"document_hash,omitempty"`
	WebhookUrl   string `protobuf:"bytes,2,opt,name=webhook_url,json=webhookUrl" json:"webhook_url,omitempty"`
	EmailAddress string `protobuf:"bytes,3,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
}

func (m *TimeStampRequest) Reset()                    { *m = TimeStampRequest{} }
func (m *TimeStampRequest) String() string            { return proto.CompactTextString(m) }
func (*TimeStampRequest) ProtoMessage()               {}
func (*TimeStampRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TimeStampRequest) GetDocumentHash() []byte {
	if m != nil {
		return m.DocumentHash
	}
	return nil
}

func (m *TimeStampRequest) GetWebhookUrl() string {
	if m != nil {
		return m.WebhookUrl
	}
	return ""
}

func (m *TimeStampRequest) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

type IncompleteTimeStamp struct {
	Ots []byte `protobuf:"bytes,1,opt,name=ots,proto3" json:"ots,omitempty"`
}

func (m *IncompleteTimeStamp) Reset()                    { *m = IncompleteTimeStamp{} }
func (m *IncompleteTimeStamp) String() string            { return proto.CompactTextString(m) }
func (*IncompleteTimeStamp) ProtoMessage()               {}
func (*IncompleteTimeStamp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IncompleteTimeStamp) GetOts() []byte {
	if m != nil {
		return m.Ots
	}
	return nil
}

func init() {
	proto.RegisterType((*TimeStampRequest)(nil), "TimeStampRequest")
	proto.RegisterType((*IncompleteTimeStamp)(nil), "IncompleteTimeStamp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Timestamp service

type TimestampClient interface {
	WithCallback(ctx context.Context, in *TimeStampRequest, opts ...grpc.CallOption) (*IncompleteTimeStamp, error)
}

type timestampClient struct {
	cc *grpc.ClientConn
}

func NewTimestampClient(cc *grpc.ClientConn) TimestampClient {
	return &timestampClient{cc}
}

func (c *timestampClient) WithCallback(ctx context.Context, in *TimeStampRequest, opts ...grpc.CallOption) (*IncompleteTimeStamp, error) {
	out := new(IncompleteTimeStamp)
	err := grpc.Invoke(ctx, "/Timestamp/WithCallback", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Timestamp service

type TimestampServer interface {
	WithCallback(context.Context, *TimeStampRequest) (*IncompleteTimeStamp, error)
}

func RegisterTimestampServer(s *grpc.Server, srv TimestampServer) {
	s.RegisterService(&_Timestamp_serviceDesc, srv)
}

func _Timestamp_WithCallback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimeStampRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimestampServer).WithCallback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Timestamp/WithCallback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimestampServer).WithCallback(ctx, req.(*TimeStampRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Timestamp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Timestamp",
	HandlerType: (*TimestampServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WithCallback",
			Handler:    _Timestamp_WithCallback_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/OTSthingy.proto",
}

func init() { proto.RegisterFile("proto/OTSthingy.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xf7, 0x0f, 0x09, 0x2e, 0xc9, 0xc8, 0xcc, 0x4b, 0xaf, 0xd4, 0x03, 0xf3, 0xa5, 0x64,
	0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0x13, 0x0b, 0x32, 0xf5, 0x13, 0xf3, 0xf2, 0xf2, 0x4b,
	0x12, 0x4b, 0x32, 0xf3, 0xf3, 0x8a, 0x21, 0xb2, 0x4a, 0xb5, 0x5c, 0x02, 0x21, 0x99, 0xb9, 0xa9,
	0xc1, 0x25, 0x89, 0xb9, 0x05, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0xca, 0x5c, 0xbc,
	0x29, 0xf9, 0xc9, 0xa5, 0xb9, 0xa9, 0x79, 0x25, 0xf1, 0x19, 0x89, 0xc5, 0x19, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x3c, 0x41, 0x3c, 0x30, 0x41, 0x8f, 0xc4, 0xe2, 0x0c, 0x21, 0x79, 0x2e, 0xee, 0xf2,
	0xd4, 0xa4, 0x8c, 0xfc, 0xfc, 0xec, 0xf8, 0xd2, 0xa2, 0x1c, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xce,
	0x20, 0x2e, 0xa8, 0x50, 0x68, 0x51, 0x0e, 0xc8, 0x94, 0xd4, 0xdc, 0xc4, 0xcc, 0x9c, 0xf8, 0xc4,
	0x94, 0x94, 0xa2, 0xd4, 0xe2, 0x62, 0x09, 0x66, 0xb0, 0x12, 0x1e, 0xb0, 0xa0, 0x23, 0x44, 0x4c,
	0x49, 0x9d, 0x4b, 0xd8, 0x33, 0x2f, 0x39, 0x3f, 0xb7, 0x20, 0x27, 0xb5, 0x24, 0x15, 0xee, 0x10,
	0x21, 0x01, 0x2e, 0xe6, 0xfc, 0x92, 0x62, 0xa8, 0xbd, 0x20, 0xa6, 0x51, 0x02, 0x17, 0x27, 0x48,
	0xba, 0x18, 0x2c, 0x1d, 0xcc, 0xc5, 0x13, 0x9e, 0x59, 0x92, 0xe1, 0x9c, 0x98, 0x93, 0x93, 0x94,
	0x98, 0x9c, 0x2d, 0x24, 0xa8, 0x87, 0xee, 0x07, 0x29, 0x11, 0x3d, 0x2c, 0xe6, 0x2a, 0x49, 0x35,
	0x5d, 0x7e, 0x32, 0x99, 0x49, 0x44, 0x89, 0x5f, 0xdf, 0x50, 0xbf, 0x3c, 0xb3, 0x24, 0x23, 0x19,
	0x6a, 0x82, 0x15, 0xa3, 0x56, 0x12, 0x1b, 0x38, 0x40, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xd0, 0x6f, 0xbf, 0x19, 0x47, 0x01, 0x00, 0x00,
}
